"use strict";(self.webpackChunklazone_learning_path=self.webpackChunklazone_learning_path||[]).push([[7818],{3905:(e,t,i)=>{i.d(t,{Zo:()=>m,kt:()=>v});var n=i(7294);function r(e,t,i){return t in e?Object.defineProperty(e,t,{value:i,enumerable:!0,configurable:!0,writable:!0}):e[t]=i,e}function o(e,t){var i=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),i.push.apply(i,n)}return i}function s(e){for(var t=1;t<arguments.length;t++){var i=null!=arguments[t]?arguments[t]:{};t%2?o(Object(i),!0).forEach((function(t){r(e,t,i[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(i)):o(Object(i)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(i,t))}))}return e}function l(e,t){if(null==e)return{};var i,n,r=function(e,t){if(null==e)return{};var i,n,r={},o=Object.keys(e);for(n=0;n<o.length;n++)i=o[n],t.indexOf(i)>=0||(r[i]=e[i]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)i=o[n],t.indexOf(i)>=0||Object.prototype.propertyIsEnumerable.call(e,i)&&(r[i]=e[i])}return r}var a=n.createContext({}),c=function(e){var t=n.useContext(a),i=t;return e&&(i="function"==typeof e?e(t):s(s({},t),e)),i},m=function(e){var t=c(e.components);return n.createElement(a.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},p=n.forwardRef((function(e,t){var i=e.components,r=e.mdxType,o=e.originalType,a=e.parentName,m=l(e,["components","mdxType","originalType","parentName"]),u=c(i),p=r,v=u["".concat(a,".").concat(p)]||u[p]||d[p]||o;return i?n.createElement(v,s(s({ref:t},m),{},{components:i})):n.createElement(v,s({ref:t},m))}));function v(e,t){var i=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=i.length,s=new Array(o);s[0]=p;var l={};for(var a in t)hasOwnProperty.call(t,a)&&(l[a]=t[a]);l.originalType=e,l[u]="string"==typeof e?e:r,s[1]=l;for(var c=2;c<o;c++)s[c]=i[c];return n.createElement.apply(null,s)}return n.createElement.apply(null,i)}p.displayName="MDXCreateElement"},784:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>a,contentTitle:()=>s,default:()=>d,frontMatter:()=>o,metadata:()=>l,toc:()=>c});var n=i(7462),r=(i(7294),i(3905));const o={sidebar_position:3,title:"Git convention"},s="R\xe8gles g\xe9n\xe9rales",l={unversionedId:"tutorial-basics/git/git-conventional-commit-rules",id:"version-1.0/tutorial-basics/git/git-conventional-commit-rules",title:"Git convention",description:"1. Tester avant de commit",source:"@site/versioned_docs/version-1.0/tutorial-basics/git/git-conventional-commit-rules.md",sourceDirName:"tutorial-basics/git",slug:"/tutorial-basics/git/git-conventional-commit-rules",permalink:"/lazone-training-path-docs/docs/tutorial-basics/git/git-conventional-commit-rules",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/versioned_docs/version-1.0/tutorial-basics/git/git-conventional-commit-rules.md",tags:[],version:"1.0",sidebarPosition:3,frontMatter:{sidebar_position:3,title:"Git convention"},sidebar:"tutorialSidebar",previous:{title:"Git avec un projet existant",permalink:"/lazone-training-path-docs/docs/tutorial-basics/git/git-with-existing-project"},next:{title:"Le protocol HTTP",permalink:"/lazone-training-path-docs/docs/tutorial-basics/introduction-http-protocol"}},a={},c=[{value:"1. Tester avant de commit",id:"1-tester-avant-de-commit",level:3},{value:"2. Avoir un commit atomique",id:"2-avoir-un-commit-atomique",level:2},{value:"3. Faire des commits r\xe9guliers",id:"3-faire-des-commits-r\xe9guliers",level:2},{value:"4. Ne pas faire de commit non fonctionnel",id:"4-ne-pas-faire-de-commit-non-fonctionnel",level:2},{value:"5. Avoir un titre de commit descriptif",id:"5-avoir-un-titre-de-commit-descriptif",level:2},{value:"6. Ajouter du contexte \xe0 son commit dans le body",id:"6-ajouter-du-contexte-\xe0-son-commit-dans-le-body",level:2},{value:"7. Ressortir ultimement dans le contexte qu&#39;est-ce qui a chang\xe9 et pourquoi",id:"7-ressortir-ultimement-dans-le-contexte-quest-ce-qui-a-chang\xe9-et-pourquoi",level:2},{value:"8. Ne pas avoir de bloc de code comment\xe9",id:"8-ne-pas-avoir-de-bloc-de-code-comment\xe9",level:2},{value:"1. Utiliser les conventions conventionalcommits",id:"1-utiliser-les-conventions-conventionalcommits",level:2},{value:"2. Types de commits suppl\xe9mentaires",id:"2-types-de-commits-suppl\xe9mentaires",level:2},{value:"3. Limiter le titre du commit",id:"3-limiter-le-titre-du-commit",level:2},{value:"4. Ne pas terminer le titre avec une ponctuation",id:"4-ne-pas-terminer-le-titre-avec-une-ponctuation",level:2},{value:"5. Avoir un titre \xe0 la forme imp\xe9rative",id:"5-avoir-un-titre-\xe0-la-forme-imp\xe9rative",level:2},{value:"6. S\xe9parer le titre du commit d&#39;un saut de ligne",id:"6-s\xe9parer-le-titre-du-commit-dun-saut-de-ligne",level:2},{value:"7. Limiter les lignes du body",id:"7-limiter-les-lignes-du-body",level:2},{value:"8. Utiliser les tirets pour les listes",id:"8-utiliser-les-tirets-pour-les-listes",level:2},{value:"9. Utiliser la forme impersonnelle",id:"9-utiliser-la-forme-impersonnelle",level:2}],m={toc:c},u="wrapper";function d(e){let{components:t,...i}=e;return(0,r.kt)(u,(0,n.Z)({},m,i,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"r\xe8gles-g\xe9n\xe9rales"},"R\xe8gles g\xe9n\xe9rales"),(0,r.kt)("h3",{id:"1-tester-avant-de-commit"},"1. Tester avant de commit"),(0,r.kt)("p",null,'Il est crucial de r\xe9sister \xe0 la tentation de committer un code que l\'on "pense" \xeatre fonctionnel. Avant de committer, effectuez des tests m\xe9ticuleux pour garantir le bon fonctionnement et \xe9viter les effets secondaires non d\xe9sir\xe9s.'),(0,r.kt)("h2",{id:"2-avoir-un-commit-atomique"},"2. Avoir un commit atomique"),(0,r.kt)("p",null,"Un commit atomique se concentre sur un seul sujet. Par exemple, r\xe9soudre deux bugs diff\xe9rents devrait r\xe9sulter en deux commits distincts. Cela facilite la compr\xe9hension des changements par l'\xe9quipe et permet des rollbacks cibl\xe9s en cas de probl\xe8me."),(0,r.kt)("h2",{id:"3-faire-des-commits-r\xe9guliers"},"3. Faire des commits r\xe9guliers"),(0,r.kt)("p",null,"Des commits r\xe9guliers maintiennent un historique clair, atomique et facile \xe0 int\xe9grer. \xc9vitez les commits volumineux partag\xe9s rarement pour faciliter la collaboration et minimiser les conflits."),(0,r.kt)("h2",{id:"4-ne-pas-faire-de-commit-non-fonctionnel"},"4. Ne pas faire de commit non fonctionnel"),(0,r.kt)("p",null,"\xc9vitez les commits de changements non fonctionnels, incomplets ou qui ne font pas compiler le projet. Utilisez plut\xf4t un ",(0,r.kt)("a",{parentName:"p",href:"https://git-scm.com/docs/git-stash"},"stash")," pour maintenir un r\xe9pertoire de travail propre."),(0,r.kt)("h2",{id:"5-avoir-un-titre-de-commit-descriptif"},"5. Avoir un titre de commit descriptif"),(0,r.kt)("p",null,"Des titres de commits informatifs facilitent la compr\xe9hension des changements. \xc9vitez les titres vagues ; d\xe9crivez clairement le contenu du commit."),(0,r.kt)("h2",{id:"6-ajouter-du-contexte-\xe0-son-commit-dans-le-body"},"6. Ajouter du contexte \xe0 son commit dans le body"),(0,r.kt)("p",null,"Associez un body \xe0 votre commit pour fournir des d\xe9tails et du contexte. Cela facilite la compr\xe9hension des changements, m\xeame des mois plus tard."),(0,r.kt)("h2",{id:"7-ressortir-ultimement-dans-le-contexte-quest-ce-qui-a-chang\xe9-et-pourquoi"},"7. Ressortir ultimement dans le contexte qu'est-ce qui a chang\xe9 et pourquoi"),(0,r.kt)("p",null,'R\xe9pondez aux questions "Qu\'est-ce qui a chang\xe9 ?" et "Pourquoi cela a chang\xe9 ?" dans le body du commit sans r\xe9p\xe9ter le code lui-m\xeame.'),(0,r.kt)("h2",{id:"8-ne-pas-avoir-de-bloc-de-code-comment\xe9"},"8. Ne pas avoir de bloc de code comment\xe9"),(0,r.kt)("p",null,"\xc9vitez les blocs de code comment\xe9 dans les commits, car ils sont consid\xe9r\xe9s comme des changements superflus."),(0,r.kt)("h1",{id:"r\xe8gles-de-formatage"},"R\xe8gles de formatage"),(0,r.kt)("h2",{id:"1-utiliser-les-conventions-conventionalcommits"},"1. Utiliser les conventions conventionalcommits"),(0,r.kt)("p",null,"Les commits suivront les sp\xe9cifications de ",(0,r.kt)("a",{parentName:"p",href:"https://www.conventionalcommits.org/"},"conventionalcommits"),"."),(0,r.kt)("h2",{id:"2-types-de-commits-suppl\xe9mentaires"},"2. Types de commits suppl\xe9mentaires"),(0,r.kt)("p",null,"En plus des types sp\xe9cifi\xe9s par ",(0,r.kt)("a",{parentName:"p",href:"https://www.conventionalcommits.org/"},"conventionalcommits"),", utilisez les types d\xe9riv\xe9s de la convention ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/angular/angular/blob/22b96b9/CONTRIBUTING.md#type"},"Angular"),"."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"build"),": changements affectant le build ou les d\xe9pendances externes (exemples : gulp, broccoli, npm)"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"ci"),": changements aux fichiers de configuration CI et scripts (exemple de scopes : Travis, Circle, BrowserStack, SauceLabs)."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"docs"),": changements sur la documentation."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"perf"),": changements r\xe9sultant \xe0 une am\xe9lioration des performances."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"refactor"),": changements ne r\xe9solvant pas un bug et n'ajoutant pas de fonctionnalit\xe9."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"style"),": changements n\u2019affectant pas le sens du code (espaces, formattage, point-virgules manquants, etc)"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"test"),": changements pour l'ajout de tests ou la modification de tests existants.")),(0,r.kt)("h2",{id:"3-limiter-le-titre-du-commit"},"3. Limiter le titre du commit"),(0,r.kt)("p",null,"Limitez le titre du commit \xe0 50 caract\xe8res id\xe9alement. La limite stricte est de 72 caract\xe8res. \xc9vitez le contenu superflu pour rester concis."),(0,r.kt)("h2",{id:"4-ne-pas-terminer-le-titre-avec-une-ponctuation"},"4. Ne pas terminer le titre avec une ponctuation"),(0,r.kt)("p",null,"Le titre du commit ne doit pas se terminer par une ponctuation."),(0,r.kt)("h2",{id:"5-avoir-un-titre-\xe0-la-forme-imp\xe9rative"},"5. Avoir un titre \xe0 la forme imp\xe9rative"),(0,r.kt)("p",null,"Utilisez la forme imp\xe9rative pour d\xe9crire le but du commit de mani\xe8re claire et concise."),(0,r.kt)("h2",{id:"6-s\xe9parer-le-titre-du-commit-dun-saut-de-ligne"},"6. S\xe9parer le titre du commit d'un saut de ligne"),(0,r.kt)("p",null,"S\xe9parez le titre du commit du body par un saut de ligne, sauf s'il n'y a pas de body."),(0,r.kt)("h2",{id:"7-limiter-les-lignes-du-body"},"7. Limiter les lignes du body"),(0,r.kt)("p",null,"Limitez les lignes du body du commit \xe0 72 caract\xe8res pour faciliter la lisibilit\xe9."),(0,r.kt)("h2",{id:"8-utiliser-les-tirets-pour-les-listes"},"8. Utiliser les tirets pour les listes"),(0,r.kt)("p",null,"Utilisez le tiret (-) entre deux espaces pour les listes dans le body du commit."),(0,r.kt)("h2",{id:"9-utiliser-la-forme-impersonnelle"},"9. Utiliser la forme impersonnelle"),(0,r.kt)("p",null,"\xc9vitez l'usage des pronoms personnels (je, tu, etc.) dans le titre et le body du commit. Pr\xe9f\xe9rez la forme impersonnelle ou passive."))}d.isMDXComponent=!0}}]);