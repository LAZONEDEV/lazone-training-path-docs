"use strict";(self.webpackChunklazone_learning_path=self.webpackChunklazone_learning_path||[]).push([[4900],{3905:(e,t,r)=>{r.d(t,{Zo:()=>c,kt:()=>g});var a=r(7294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},i=Object.keys(e);for(a=0;a<i.length;a++)r=i[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)r=i[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var s=a.createContext({}),p=function(e){var t=a.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},c=function(e){var t=p(e.components);return a.createElement(s.Provider,{value:t},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,i=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),u=p(r),d=n,g=u["".concat(s,".").concat(d)]||u[d]||m[d]||i;return r?a.createElement(g,o(o({ref:t},c),{},{components:r})):a.createElement(g,o({ref:t},c))}));function g(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var i=r.length,o=new Array(i);o[0]=d;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[u]="string"==typeof e?e:n,o[1]=l;for(var p=2;p<i;p++)o[p]=r[p];return a.createElement.apply(null,o)}return a.createElement.apply(null,r)}d.displayName="MDXCreateElement"},8116:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>m,frontMatter:()=>i,metadata:()=>l,toc:()=>p});var a=r(7462),n=(r(7294),r(3905));const i={sidebar_position:2,title:"Git avec un projet existant"},o="Travaillez avec un projet existant",l={unversionedId:"tutorial-basics/git/git-with-existing-project",id:"tutorial-basics/git/git-with-existing-project",title:"Git avec un projet existant",description:"Git Clone",source:"@site/i18n/en/docusaurus-plugin-content-docs/current/tutorial-basics/git/git-with-existing-project.md",sourceDirName:"tutorial-basics/git",slug:"/tutorial-basics/git/git-with-existing-project",permalink:"/lazone-training-path-docs/en/docs/next/tutorial-basics/git/git-with-existing-project",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/tutorial-basics/git/git-with-existing-project.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2,title:"Git avec un projet existant"},sidebar:"tutorialSidebar",previous:{title:"Installer et d\xe9marrer avec git",permalink:"/lazone-training-path-docs/en/docs/next/tutorial-basics/git/git-setup"},next:{title:"Git convention",permalink:"/lazone-training-path-docs/en/docs/next/tutorial-basics/git/git-conventional-commit-rules"}},s={},p=[{value:"Git Clone",id:"git-clone",level:2},{value:"Git Status",id:"git-status",level:2},{value:"Git Rebase",id:"git-rebase",level:2}],c={toc:p},u="wrapper";function m(e){let{components:t,...r}=e;return(0,n.kt)(u,(0,a.Z)({},c,r,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"travaillez-avec-un-projet-existant"},"Travaillez avec un projet existant"),(0,n.kt)("h2",{id:"git-clone"},"Git Clone"),(0,n.kt)("p",null,"Lorsque vous souhaitez travailler sur un projet existant, vous utilisez la commande ",(0,n.kt)("inlineCode",{parentName:"p"},"git clone")," pour cr\xe9er une copie locale du d\xe9p\xf4t distant sur votre machine."),(0,n.kt)("ol",null,(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("p",{parentName:"li"},"Naviguez vers le r\xe9pertoire o\xf9 vous souhaitez cloner le projet."),(0,n.kt)("pre",{parentName:"li"},(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"cd chemin/vers/le/repertoire\n"))),(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("p",{parentName:"li"},"Clonez le d\xe9p\xf4t en utilisant la commande ",(0,n.kt)("inlineCode",{parentName:"p"},"git clone")," avec l'URL du d\xe9p\xf4t :"),(0,n.kt)("pre",{parentName:"li"},(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"git clone https://lien-vers-le-depot.git\n")))),(0,n.kt)("p",null,"Cela cr\xe9era un r\xe9pertoire avec le nom du projet dans votre r\xe9pertoire actuel, contenant tous les fichiers du d\xe9p\xf4t. Vous aurez ainsi une copie locale pr\xeate \xe0 \xeatre modifi\xe9e."),(0,n.kt)("h2",{id:"git-status"},"Git Status"),(0,n.kt)("p",null,"La commande ",(0,n.kt)("inlineCode",{parentName:"p"},"git status")," est utilis\xe9e pour afficher l'\xe9tat des fichiers dans votre r\xe9pertoire de travail par rapport au dernier commit."),(0,n.kt)("ol",null,(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("p",{parentName:"li"},"Naviguez vers le r\xe9pertoire du projet clon\xe9."),(0,n.kt)("pre",{parentName:"li"},(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"cd chemin/vers/le/projet\n"))),(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("p",{parentName:"li"},"Ex\xe9cutez la commande ",(0,n.kt)("inlineCode",{parentName:"p"},"git status")," :"),(0,n.kt)("pre",{parentName:"li"},(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"git status\n")))),(0,n.kt)("p",null,"Cette commande vous montrera les fichiers modifi\xe9s, les fichiers pr\xeats \xe0 \xeatre commit\xe9s, et d'autres informations utiles sur l'\xe9tat de votre d\xe9p\xf4t."),(0,n.kt)("h2",{id:"git-rebase"},"Git Rebase"),(0,n.kt)("p",null,"La commande ",(0,n.kt)("inlineCode",{parentName:"p"},"git rebase")," est utilis\xe9e pour int\xe9grer les modifications d'une branche sur une autre. Cela est souvent utilis\xe9 pour maintenir un historique de commits propre et lin\xe9aire."),(0,n.kt)("ol",null,(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("p",{parentName:"li"},"Assurez-vous d'\xeatre sur la branche que vous souhaitez mettre \xe0 jour."),(0,n.kt)("pre",{parentName:"li"},(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"git checkout ma_branche\n"))),(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("p",{parentName:"li"},"Effectuez un rebase avec la branche cible (par exemple, ",(0,n.kt)("inlineCode",{parentName:"p"},"master"),") :"),(0,n.kt)("pre",{parentName:"li"},(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"git rebase master\n"))),(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("p",{parentName:"li"},"R\xe9solvez les \xe9ventuels conflits s'il y en a, suivez les instructions de Git.")),(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("p",{parentName:"li"},"Apr\xe8s avoir r\xe9solu les conflits, continuez le rebase :"),(0,n.kt)("pre",{parentName:"li"},(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"git rebase --continue\n"))),(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("p",{parentName:"li"},"Une fois le rebase termin\xe9, mettez \xe0 jour la branche distante :"),(0,n.kt)("pre",{parentName:"li"},(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"git push origin ma_branche --force-with-lease\n")))),(0,n.kt)("p",null,"Attention : Utilisez ",(0,n.kt)("inlineCode",{parentName:"p"},"--force")," avec pr\xe9caution, car cela r\xe9\xe9crit l'historique du d\xe9p\xf4t distant."),(0,n.kt)("p",null,"Ces commandes ",(0,n.kt)("inlineCode",{parentName:"p"},"git clone"),", ",(0,n.kt)("inlineCode",{parentName:"p"},"git status"),", et ",(0,n.kt)("inlineCode",{parentName:"p"},"git rebase")," sont des outils essentiels pour travailler efficacement avec Git. Assurez-vous de comprendre comment les utiliser correctement pour une gestion de version optimale."))}m.isMDXComponent=!0}}]);